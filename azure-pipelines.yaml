trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src/extensions/*

pool:
  vmImage: 'windows-latest'

parameters:
  - name: publishFromFeature
    displayName: 'Publish from feature branch to Private MarketPlace?'
    type: boolean
    default: false

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  publisher: 'capgemini-msft-uk'
  deploymentBranch: 'refs/heads/master'
  extensionId: 'build-release-task'
  extensionName: 'Capgemini Microsoft UK Build and Release Tools'
  vstsMktPlaceServiceConnName: 'Capgemini MarketPlace Publishers'

stages:
  - stage: Build
    jobs:
    - job: BuildJob
      displayName: Build
      steps:
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 5.2.0'
        inputs:
          versionSpec: 5.2.0

      - task: PowerShell@2
        displayName: 'Run Pester Tests'
        inputs:
          targetType: filePath
          filePath: '$(System.DefaultWorkingDirectory)/tests/RunTests.ps1'
          workingDirectory: '$(System.DefaultWorkingDirectory)/tests'

      - task: PublishTestResults@2
        displayName: 'Publish Pester Results **/Pester-Tests.xml'
        inputs:
          testResultsFormat: NUnit
          testResultsFiles: '**/Pester-Tests.xml'
          testRunTitle: 'OWASP API Tests'
          searchFolder: '$(System.DefaultWorkingDirectory)\tests\TestResults'
      
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: '**/Pester-Coverage.xml'
          pathToSources: '$(System.DefaultWorkingDirectory)\tests\TestResults'          

      - task: TfxInstaller@3
        displayName: 'Use Node CLI for Azure DevOps'
        inputs:
          version: 'v0.9.x'

      - task: QueryAzureDevOpsExtensionVersion@3
        inputs:
          connectTo: 'VsTeam'
          connectedServiceName: '$(vstsMktPlaceServiceConnName)'
          publisherId: '$(publisher)-dev'
          extensionId: '$(extensionId)'
          versionAction: 'Patch'
          outputVariable: 'Task.Extension.Version' 
          
      - task: PackageAzureDevOpsExtension@3
        inputs:
          rootFolder: '$(system.defaultworkingdirectory)/src/extensions'
          publisherId: '$(publisher)'
          extensionId: '$(extensionId)'
          extensionName: '$(extensionName)'
          extensionVersion: '$(Task.Extension.Version)'
          updateTasksVersion: true
          updateTasksVersionType: 'patch'
          extensionVisibility: 'private'
          extensionPricing: 'free'

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**.vsix'
          TargetFolder: '$(build.artifactstagingdirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'

  - stage: PublishtoPrivateMarketPlace
    displayName: Publish to Private MarketPlace
    condition: and(succeeded(), or(eq(${{ parameters.publishFromFeature }}, true), eq(variables['Build.SourceBranch'], variables['deploymentBranch'])))
    jobs:
      - job: PublishPrivateJob
        displayName: Publish to Private MarketPlace        
        steps:
        - checkout: none
        - download: current

        - task: TfxInstaller@3
          inputs:
            version: 'v0.9.x'

        - task: PublishExtension@1
          inputs:
            connectTo: 'VsTeam'
            connectedServiceName: '$(vstsMktPlaceServiceConnName)'
            fileType: 'vsix'
            vsixFile: '$(Pipeline.Workspace)/drop/**.vsix'
            publisherId: '$(publisher)-dev'
            extensionName: '$(extensionName)'
            updateTasksVersion: false
            extensionVisibility: 'private'
            extensionPricing: 'free'

  - stage: PublishToPublicMarketPlace
    displayName: Publish to Public Feed
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], variables['deploymentBranch']))
    jobs:
      - deployment:
        environment: Public Visual Studio MarketPlace
        strategy:
          runOnce:
            deploy:
              steps:

              - task: TfxInstaller@3
                inputs:
                  version: 'v0.9.x'

              - task: PublishExtension@1
                inputs:
                  connectTo: 'VsTeam'
                  connectedServiceName: '$(vstsMktPlaceServiceConnName)'
                  fileType: 'vsix'
                  vsixFile: '$(Pipeline.Workspace)/drop/**.vsix'
                  publisherId: '$(publisher)'
                  extensionName: '$(extensionName)'
                  updateTasksVersion: false
                  extensionVisibility: 'public'
                  extensionPricing: 'free'
