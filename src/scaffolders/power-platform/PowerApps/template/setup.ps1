$AdoAccountName = "__adoAccountName__"
$ProjectName = "__adoProjectName__"
$AdoToken = "__patToken__"
$RepoName = "__repositoryName__"

$orgUrl = "https://dev.azure.com/$AdoAccountName"

$env:AZURE_DEVOPS_EXT_PAT = $AdoToken

$existingProject = az devops project show --project $ProjectName --org $orgUrl

if($null -eq $existingProject)
{
	Write-Host "Project $ProjectName must exist"
	return -1
}

Write-Host "Create git repo and push to ADO"

git config --global user.email "agent@scaffold.com"
git config --global user.name "buildService"

git init .
git checkout -b master
git add --all
git commit -m "first version of code generated by power apps project scaffolder"

az repos create --name $RepoName --project $ProjectName --org $orgUrl

git remote add origin https://__patToken__@dev.azure.com/__adoAccountName__/__adoProjectName__/_git/CDSRepo
git push -u origin --all

Write-Host "Create ADO pipelines"
az pipelines create --name 'PR' --folder-path 'PR' --description 'PR Pipeline for Project' --repository "$orgUrl/$ProjectName/_git/$RepoName" --branch master --yml-path "/pipelines/azure-pipelines-pull-request.yml" --project $ProjectName --org $orgUrl
az pipelines create --name 'CI Build' --folder-path 'CI' --description 'Pipeline for Project' --repository "$orgUrl/$ProjectName/_git/$RepoName" --branch master --yml-path "/pipelines/azure-pipelines.yml" --project $ProjectName --org $orgUrl

az devops service-endpoint create --service-endpoint-configuration serviceendpoint.json

$environmentNames = "__releaseEnvironments__"
$ReleaseEnvironments = $environmentNames.Split(",")

$infile = "envbody.json"
foreach($environmentItem in $ReleaseEnvironments)
{
	$envBody = @{
		name = $environmentItem
		description = "$environmentItem"
	  }
	
	  Set-Content -Path $infile -Value ($envBody | ConvertTo-Json)
	  az devops invoke `
		 --area distributedtask --resource environments `
		 --route-parameters project=$ProjectName --org $orgUrl `
		 --http-method POST --in-file $infile `
		 --api-version "6.0-preview"
}	


$projectWiki = az devops wiki list --project $ProjectName --scope project --org $orgUrl --name "WIKI" | ConvertFrom-Json

if ($null -eq $projectWiki)
{
	az devops wiki create --name "WIKI" --project $ProjectName --type 'projectwiki'
}

az devops wiki page create --path 'PowerApps ALM' --wiki $projectWiki --content "Hello World" --org $orgUrl --project $ProjectName


return 0
