@page "/"
@using Capgemini.CapabilityCatalog.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Capgemini.CapabilityCatalog.Shared
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<h1>PACE Offer Scaffolders</h1>

<di class="top-row ">
    <div class="container-fluid">
    <input placeholder="PowerApps" /><button class="nav-link btn btn-link">Search</button>
  </div>
</di>

 <RadzenText TextStyle="TextStyle.Body2">
        <strong>Radzen Body 2</strong> Radzen Blazor Components are open source and free for commercial use. You can install them from nuget or build your own copy from source.
<RadzenButton Text="EXPLORE DEMOS" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Default"></RadzenButton>
    </RadzenText>





@if (scaffolders == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var scaffolder in scaffolders)
            {
                        <tr>

                            <td>@scaffolder.Name</td>
                            <td>@scaffolder.Description</td>
                            <td>
                                         <button class="btn btn-primary" @onclick="ShowDetailedView">more...</button>
                            </td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    private Scaffolder[]? scaffolders;   

    private DataService dataService = new DataService();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            scaffolders = dataService.Scaffolders;
            //TODO: get data from server
            //  scaffolders = await Http.GetFromJsonAsync<Scaffolder[]>("Scaffolder");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    @code{
    private void ShowDetailedView(MouseEventArgs args)
    {
        Navigation.NavigateTo("scaffolderdetails");
    }
}
}



<RadzenLayout style="height: 300px">
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
            <RadzenLabel Text="Header" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Home" Icon="home" />
            <RadzenPanelMenuItem Text="Users" Icon="account_box" />
        </RadzenPanelMenu>
        <div class="rz-p-4">
            Sidebar
        </div>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            Body
        </div>
    </RadzenBody>
    <RadzenFooter>
        Footer
    </RadzenFooter>
</RadzenLayout>

@code {
    bool sidebar1Expanded = true;
}